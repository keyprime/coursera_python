# переменные, знак присваивания =
name = "Tom" # определена переменная name, которая хранит строку Tom
userName = "Tom" # camelTyping (camel case), PEP 8 — Python Enhanced Proposal
user_name = "Tom" # underscore notation (lower_case_with_underscores)

# множественное присваивание
name, surname = 'Timur', 'Guev'
print('Имя:', name, 'Фамилия:', surname)

name, surname = input(), input()
print('Имя:', name, 'Фамилия:', surname)

# обмен значениями
name1 = 'Timur'
name2 = 'Gvido'
name1, name2 = name2, name1

# две разные переменные (регистрозависимость)
name = "Tom"
Name = "Tom"

name = "Tom"  # переменной name присваивается значение "Tom"
print(name)   # вывод: Tom
name = "Bob"  # изменяется значение на "Bob"
print(name)   # вывод: Bob

speed = 108
time = 12
dist = speed * time
print(dist)   # 1296

# арифметические операции:
print(6 + 2)  # 8
print(6 - 2)  # 4
print(6 * 2)  # 12
print(6 / 2)  # 3.0
print(7 / 2)  # 3.5
print(6 ** 2)  # 36 Возводим число 6 в степень 2
print(7 // 2)  # 3 Целочисленное деление, отбрасываем дробную часть
print(7 % 2)  # остаток от деления числа 7 на 2. Результат 7 - 6 = 1
print(-5 // 2)  # -3
print(-5 % 2)  # 1
print(11 // -5)  # -3
print(11 % -5)  # -4
print(-11 // -5)  # 2
print(-11 % -5)  # -1
print(-7 % 3)  # 2

# приоритеты операций: [**] [* / // %] [+ -]
number = 3 + 4 * 5 ** 2 + 7
print(number)  # 110

number = (3 + 4) * (5 ** 2 + 7)
print(number)  # 224

# присвоить результат операции первому операнду: /= //= **= %=
number = 10
number += 5
print(number)  # 15
number -= 3
print(number)  # 12
number *= 4
print(number)  # 48

# числа типа float
first_number = 2.0001
second_number = 5
third_number = first_number / second_number # 0.40002
print(third_number) # 0.40002000000000004

print(2.0001 + 0.1)  # 2.1001000000000003

# функция round
first_number = 2.0001
second_number = 0.1
third_number = first_number + second_number
print(round(third_number))  # 2

first_number = 2.0001
second_number = 0.1
third_number = first_number + second_number
print(round(third_number, 4))  # 2.1001 число third_number округляется до 4 знаков после запятой

# округление до целого числа
print(round(2.5))   # 2
print(round(2.51))  # 3
print(round(2.7))   # 3
print(round(2.4))   # 2
 
# округление до двух знаков после запятой
# если последняя округляемая цифра равна 5 или больше, то последующая цифра увеличивается на единицу.
print(round(2.554, 2))      # 2.55
print(round(2.555, 2))      # 2.56
print(round(2.554999, 2))   # 2.55
print(round(2.499, 2))      # 2.5
